drop table IF EXISTS films cascade;
drop table IF EXISTS users cascade;
drop table IF EXISTS mpa cascade;
drop table IF EXISTS friends cascade;
drop table IF EXISTS likes cascade;
drop table IF EXISTS genres cascade;

CREATE TABLE IF NOT EXISTS genres(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(40) NOT NULL,
    description VARCHAR(200) NOT NULL);

create table IF NOT EXISTS mpa
(mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(20) NOT NULL unique,
  description VARCHAR(200) NOT NULL unique);

create TABLE IF NOT EXISTS users
(user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email VARCHAR(200) NOT NULL,
  login VARCHAR(200) NOT NULL,
  name VARCHAR(200) NOT NULL,
  birthday DATE NOT NULL);

create TABLE IF NOT EXISTS films
(film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  description VARCHAR(200),
  releaseDate DATE NOT NULL,
  duration INTEGER NOT NULL,
  mpa_id INTEGER NOT NULL REFERENCES mpa(mpa_id) ON delete RESTRICT);

CREATE TABLE IF NOT EXISTS genresfilms
    (film_id BIGINT REFERENCES films(film_id) ON delete CASCADE,
    genre_id INTEGER REFERENCES genres(genre_id) ON delete CASCADE,
    primary key (film_id, genre_id));

create TABLE IF NOT EXISTS friends
(user_id BIGINT REFERENCES users(user_id) ON delete CASCADE,
  friend_id BIGINT REFERENCES users(user_id) ON delete CASCADE,
  assent BOOLEAN DEFAULT FALSE NOT NULL,
  primary key (user_id, friend_id)
);

create TABLE IF NOT EXISTS likes
(user_id BIGINT REFERENCES users(user_id) ON delete CASCADE,
  film_id BIGINT REFERENCES films(film_id) ON delete CASCADE,
  primary key (user_id, film_id)
);